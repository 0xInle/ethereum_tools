{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gulp-builder/webpack/bootstrap","webpack://gulp-builder/webpack/runtime/make namespace object","webpack://gulp-builder/./src/js/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const buttons = document.querySelectorAll('.header__btn');\nconst inputField = document.querySelector('.main__inp');\nconst exampleText = document.querySelector('.main__example-text');\n\n// Функция для обрезки адреса и добавления многоточия в центре\nfunction formatAddress(address) {\n  const maxLength = 67;\n\n  if (address.length > maxLength) {\n    const halfLength = Math.floor(maxLength / 2);\n    return address.slice(0, halfLength) + '...' + address.slice(address.length - halfLength);\n  }\n\n  return address;\n}\n\n// Обработчик для кнопок\nfunction setFocusAndPlaceholder(button) {\n  buttons.forEach(btn => btn.classList.remove('active'));\n\n  button.classList.add('active');\n\n  const placeholderText = button.getAttribute('data-placeholder');\n  inputField.placeholder = placeholderText;\n\n  const fullAddress = button.getAttribute('data-example');\n\n  exampleText.textContent = formatAddress(fullAddress);\n\n  exampleText.setAttribute('data-full-address', fullAddress);\n\n  inputField.value = '';\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  setFocusAndPlaceholder(buttons[0]);\n  buttons[0].focus();\n});\n\nbuttons.forEach(button => {\n  button.addEventListener('click', () => {\n    setFocusAndPlaceholder(button);\n  });\n\n  button.addEventListener('focus', () => {\n    setFocusAndPlaceholder(button);\n  });\n});\n\n// Заполнение инпута по клику на примерный адрес\nexampleText.addEventListener('click', function() {\n  const fullAddress = exampleText.getAttribute('data-full-address');\n\n  inputField.value = fullAddress;\n});\n\n// Находим элементы\nconst submitButton = document.querySelector('.main__btn');\nconst clearButton = document.querySelector('.main__btn-x');\nconst errorButton = document.querySelector('.main__btn-error');\nconst searchBox = document.querySelector('.main__search-box');\n\n// Флаг, чтобы предотвратить повторный вызов\nlet isLoading = false;\n\n// Функция для запуска лоадера и проверки адреса\nfunction checkAddress() {\n  if (isLoading) return; // Если уже идет проверка, выходим\n  isLoading = true;\n\n  // Скрываем ошибку и удаляем красные стили перед проверкой\n  errorButton.style.display = 'none';\n  searchBox.classList.remove('error');\n  inputField.classList.remove('error');\n\n  // Заменяем крестик на лоадер\n  clearButton.innerHTML = `<svg class=\"loader\" viewBox=\"0 0 50 50\">\n    <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"4\" stroke-dasharray=\"90, 150\" stroke-linecap=\"round\"></circle>\n  </svg>`;\n\n  setTimeout(() => {\n    // Возвращаем крестик после загрузки\n    clearButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\n    </svg>`;\n\n    const isValid = Math.random() > 0.5; // 50% шанс валидности\n\n    if (!isValid) {\n      console.error(\"❌ Ошибка: адрес не валиден\");\n      errorButton.style.display = 'block'; // Показываем ошибку\n      searchBox.classList.add('error'); // Красный бордер\n      inputField.classList.add('error'); // Красный текст\n    } else {\n      console.log(\"✅ Адрес валиден\");\n      errorButton.style.display = 'none'; // Прячем ошибку\n      searchBox.classList.remove('error'); // Убираем красный бордер\n      inputField.classList.remove('error'); // Убираем красный текст\n    }\n\n    isLoading = false; // Сбрасываем флаг после завершения проверки\n  }, 1000);\n}\n\n// Очищение инпута при нажатии на кнопку крестика\nclearButton.addEventListener('click', () => {\n  inputField.value = ''; // Очищаем поле\n  searchBox.classList.remove('error'); // Убираем красный бордер\n  inputField.classList.remove('error'); // Убираем красный текст\n  errorButton.style.display = 'none'; // Скрываем иконку ошибки\n});\n\n// Обработка нажатия на кнопку \"Get Info\"\nsubmitButton.addEventListener('click', () => {\n  if (inputField.value.trim() !== '') {\n    checkAddress();\n  }\n});\n\n// Обработка нажатия Enter в инпуте\ninputField.addEventListener('keydown', (event) => {\n  if (event.key === 'Enter' && inputField.value.trim() !== '') {\n    event.preventDefault(); // Чтобы форма не отправлялась\n    checkAddress();\n  }\n});\n"],"names":["buttons","document","querySelectorAll","inputField","querySelector","exampleText","formatAddress","address","maxLength","length","halfLength","Math","floor","slice","setFocusAndPlaceholder","button","forEach","btn","classList","remove","add","placeholderText","getAttribute","placeholder","fullAddress","textContent","setAttribute","value","addEventListener","focus","submitButton","clearButton","errorButton","searchBox","isLoading","checkAddress","style","display","innerHTML","setTimeout","isValid","random","console","error","log","trim","event","key","preventDefault"],"sourceRoot":""}