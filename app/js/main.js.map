{"version":3,"file":"main.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,UAAU,GAAGF,QAAQ,CAACG,aAAa,CAAC,YAAY,CAAC;EACvD,MAAMC,WAAW,GAAGJ,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;EAC1D,MAAME,WAAW,GAAGL,QAAQ,CAACG,aAAa,CAAC,gBAAgB,CAAC;EAC5D,MAAMG,OAAO,GAAGN,QAAQ,CAACO,gBAAgB,CAAC,cAAc,CAAC;EACzD,MAAMC,SAAS,GAAGR,QAAQ,CAACG,aAAa,CAAC,mBAAmB,CAAC;EAC7D,MAAMM,SAAS,GAAGT,QAAQ,CAACG,aA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","sources":["webpack://gulp-builder/webpack/bootstrap","webpack://gulp-builder/webpack/runtime/make namespace object","webpack://gulp-builder/./src/js/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// document.addEventListener('DOMContentLoaded', () => {\n//   const inputField = document.querySelector('.main__inp');\n//   const clearButton = document.querySelector('.main__btn-x');\n//   const exampleText = document.querySelector('.main__example');\n//   const buttons = document.querySelectorAll('.header__btn');\n//   const searchBox = document.querySelector('.main__search-box');\n\n//   if (!inputField || !clearButton || !buttons.length || !exampleText || !searchBox) {\n//     console.error('Ошибка: Один из элементов не найден.');\n//     return;\n//   }\n\n//   // Функция для установки активной кнопки и обновления плейсхолдера\n//   function setActiveButton(clickedButton) {\n//     buttons.forEach(button => button.classList.remove('active'));\n//     clickedButton.classList.add('active');\n\n//     // Устанавливаем placeholder\n//     const placeholderText = clickedButton.getAttribute('data-placeholder');\n//     inputField.placeholder = placeholderText;\n\n//     // Очищаем поле при смене кнопки\n//     inputField.value = '';\n//     inputField.dataset.activeButton = clickedButton.getAttribute('data-placeholder');\n\n//     // Сбрасываем красное выделение при смене кнопки, если поле пустое\n//     if (inputField.value.trim() === '') {\n//       searchBox.classList.remove('error');\n//     }\n//   }\n\n//   // Устанавливаем фокус на первую кнопку после полной загрузки страницы\n//   setTimeout(() => {\n//     const firstButton = buttons[0];\n//     if (firstButton) {\n//       setActiveButton(firstButton);\n//       firstButton.focus(); // Гарантируем фокус после загрузки\n//     }\n//   }, 0); // Используем setTimeout, чтобы дать браузеру время на рендер\n\n//   // Обработчик для кнопок переключения\n//   buttons.forEach(button => {\n//     button.addEventListener('click', () => {\n//       setActiveButton(button);\n//     });\n//   });\n\n//   // Очищение инпута при нажатии на крестик\n//   clearButton.addEventListener('click', () => {\n//     inputField.value = ''; // Очищаем input\n//     searchBox.classList.remove('error'); // Сбрасываем красный бордер\n//   });\n\n//   // Клик по example вставляет примерный адрес в input и переносит фокус на input\n//   exampleText.addEventListener('click', () => {\n//     const activeButton = document.querySelector('.header__btn.active');\n//     if (activeButton) {\n//       inputField.value = activeButton.getAttribute('data-example');\n//       inputField.focus(); // Переносим фокус в input\n//     }\n//   });\n\n//   // Сохраняем выделение кнопки при взаимодействии с инпутом\n//   inputField.addEventListener('focus', () => {\n//     const activeButtonPlaceholder = inputField.dataset.activeButton;\n//     buttons.forEach(button => {\n//       if (button.getAttribute('data-placeholder') === activeButtonPlaceholder) {\n//         button.classList.add('active');\n//       }\n//     });\n//   });\n// });\n\n// // 2. Валидация инпута и ответов\n// document.addEventListener('DOMContentLoaded', () => {\n//   const inputField = document.querySelector('.main__inp');\n//   const submitButton = document.querySelector('.main__btn');\n//   const clearButton = document.querySelector('.main__btn-x');\n//   const alertIcon = document.querySelector('.main__svg-allert');\n//   const searchBox = document.querySelector('.main__search-box');\n\n//   let isLoading = false; // Флаг для предотвращения повторных запросов\n\n//   function showLoader() {\n//     const loader = `<svg class=\"loader\" viewBox=\"0 0 50 50\">\n//       <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"4\" stroke-dasharray=\"90, 150\" stroke-linecap=\"round\"></circle>\n//     </svg>`;\n//     clearButton.innerHTML = loader;\n//     clearButton.style.display = 'block';\n//   }\n\n//   function hideLoader() {\n//     clearButton.style.display = 'none';\n//   }\n\n//   function checkAddress() {\n//     if (isLoading) return;\n//     isLoading = true;\n\n//     showLoader();\n//     searchBox.classList.remove('error');\n//     alertIcon.style.display = 'none';\n\n//     setTimeout(() => {\n//       const isValid = Math.random() > 0.5;\n//       hideLoader();\n\n//       if (isValid) {\n//         console.log(\"✅ Адрес валиден\");\n//         searchBox.classList.remove('error');\n//         clearButton.style.display = 'block';\n//         clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n//           <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n//         </svg>`;\n//       } else {\n//         console.log(\"❌ Ошибка: адрес не валиден\");\n//         searchBox.classList.add('error');\n//         alertIcon.style.display = 'block';\n//         setTimeout(() => {\n//           alertIcon.style.display = 'none';\n//           clearButton.style.display = 'block';\n//           clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n//             <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n//           </svg>`;\n//         }, 3000);\n//       }\n\n//       isLoading = false;\n//     }, 1000);\n//   }\n\n//   submitButton.addEventListener('click', () => {\n//     if (inputField.value.trim() === '') {\n//       searchBox.classList.add('error'); // Меняем бордер на красный\n//     } else {\n//       checkAddress();\n//     }\n//   });\n\n//   inputField.addEventListener('keydown', (event) => {\n//     if (event.key === 'Enter') {\n//       event.preventDefault();\n//       if (inputField.value.trim() === '') {\n//         searchBox.classList.add('error'); // Меняем бордер на красный\n//       } else {\n//         checkAddress();\n//       }\n//     }\n//   });\n\n//   clearButton.addEventListener('click', () => {\n//     inputField.value = '';\n//     searchBox.classList.remove('error');\n//     clearButton.style.display = 'block';\n//     clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n//       <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n//     </svg>`;\n//     inputField.focus();\n//   });\n\n//   alertIcon.addEventListener('mouseover', () => {\n//     alertIcon.style.display = 'none';\n//     clearButton.style.display = 'block';\n//     clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n//       <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n//     </svg>`;\n//   });\n// });\n\n// 1. Нажатие на кнопки и замена текста в плейсхолдере\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const inputField = document.querySelector('.main__inp');\n  const clearButton = document.querySelector('.main__btn-x');\n  const exampleText = document.querySelector('.main__example');\n  const buttons = document.querySelectorAll('.header__btn');\n  const searchBox = document.querySelector('.main__search-box');\n  const alertIcon = document.querySelector('.main__svg-allert');\n  const submitButton = document.querySelector('.main__btn');\n\n  let isLoading = false; // Флаг для предотвращения повторных запросов\n  let alertTimeout; // Таймер для иконки ошибки\n\n  // Проверка на наличие всех необходимых элементов\n  if (!inputField || !clearButton || !buttons.length || !exampleText || !searchBox || !alertIcon) {\n    console.error('Ошибка: Один из элементов не найден.');\n    return;\n  }\n\n  // Функция для установки активной кнопки и обновления плейсхолдера\n  function setActiveButton(clickedButton) {\n    buttons.forEach(button => button.classList.remove('active'));\n    clickedButton.classList.add('active');\n\n    // Устанавливаем placeholder\n    const placeholderText = clickedButton.getAttribute('data-placeholder');\n    inputField.placeholder = placeholderText;\n\n    // Очищаем поле при смене кнопки\n    inputField.value = '';\n    inputField.dataset.activeButton = clickedButton.getAttribute('data-placeholder');\n\n    // Сбрасываем красное выделение при смене кнопки, если поле пустое\n    if (inputField.value.trim() === '') {\n      searchBox.classList.remove('error');\n    }\n\n    // Скрываем иконку ошибки сразу при переключении кнопки\n    alertIcon.style.display = 'none';\n\n    // Показываем кнопку с крестиком сразу\n    clearButton.style.display = 'block';\n    clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>`;\n\n    // Если был активен таймер на 3 секунды, сбрасываем его\n    if (alertTimeout) {\n      clearTimeout(alertTimeout);\n    }\n  }\n\n  // Устанавливаем фокус на первую кнопку после полной загрузки страницы\n  setTimeout(() => {\n    const firstButton = buttons[0];\n    if (firstButton) {\n      setActiveButton(firstButton);\n      firstButton.focus(); // Гарантируем фокус после загрузки\n    }\n  }, 0); // Используем setTimeout, чтобы дать браузеру время на рендер\n\n  // Обработчик для кнопок переключения\n  buttons.forEach(button => {\n    button.addEventListener('click', () => {\n      setActiveButton(button);\n    });\n  });\n\n  // Очищение инпута при нажатии на крестик\n  clearButton.addEventListener('click', () => {\n    inputField.value = ''; // Очищаем input\n    searchBox.classList.remove('error'); // Сбрасываем красный бордер\n  });\n\n  // Клик по example вставляет примерный адрес в input и переносит фокус на input\n  exampleText.addEventListener('click', () => {\n    const activeButton = document.querySelector('.header__btn.active');\n    if (activeButton) {\n      inputField.value = activeButton.getAttribute('data-example');\n      inputField.focus(); // Переносим фокус в input\n    }\n  });\n\n  // Сохраняем выделение кнопки при взаимодействии с инпутом\n  inputField.addEventListener('focus', () => {\n    const activeButtonPlaceholder = inputField.dataset.activeButton;\n    buttons.forEach(button => {\n      if (button.getAttribute('data-placeholder') === activeButtonPlaceholder) {\n        button.classList.add('active');\n      }\n    });\n  });\n\n  // Функция для отображения лоадера\n  function showLoader() {\n    const loader = `<svg class=\"loader\" viewBox=\"0 0 50 50\">\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"4\" stroke-dasharray=\"90, 150\" stroke-linecap=\"round\"></circle>\n    </svg>`;\n    clearButton.innerHTML = loader;\n    clearButton.style.display = 'block';\n  }\n\n  // Функция для скрытия лоадера\n  function hideLoader() {\n    clearButton.style.display = 'none';\n  }\n\n// 2. Валидация адреса и лоадер\n  function checkAddress() {\n    if (isLoading) return;\n    isLoading = true;\n\n    showLoader();\n    searchBox.classList.remove('error');\n    alertIcon.style.display = 'none';\n\n    setTimeout(() => {\n      const isValid = Math.random() > 0.5; // Для примера случайная проверка\n\n      hideLoader();\n\n      if (isValid) {\n        console.log(\"✅ Адрес валиден\");\n        searchBox.classList.remove('error');\n        clearButton.style.display = 'block';\n        clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>`;\n      } else {\n        console.log(\"❌ Ошибка: адрес не валиден\");\n        searchBox.classList.add('error');\n        alertIcon.style.display = 'block';\n\n        // Запуск таймера для скрытия иконки через 3 секунды\n        alertTimeout = setTimeout(() => {\n          alertIcon.style.display = 'none';\n          clearButton.style.display = 'block';\n          clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>`;\n        }, 3000);\n      }\n\n      isLoading = false;\n    }, 1000);\n  }\n\n  // Обработчик на кнопку отправки\n  submitButton.addEventListener('click', () => {\n    if (inputField.value.trim() === '') {\n      searchBox.classList.add('error'); // Меняем бордер на красный\n    } else {\n      checkAddress();\n    }\n  });\n\n  // Обработчик для нажатия Enter\n  inputField.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (inputField.value.trim() === '') {\n        searchBox.classList.add('error'); // Меняем бордер на красный\n      } else {\n        checkAddress();\n      }\n    }\n  });\n\n  // Клик по иконке ошибки — мышь над иконкой\n  alertIcon.addEventListener('mouseover', () => {\n    alertIcon.style.display = 'none';\n    clearButton.style.display = 'block';\n    clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>`;\n  });\n});\n\n"],"names":["document","addEventListener","inputField","querySelector","clearButton","exampleText","buttons","querySelectorAll","searchBox","alertIcon","submitButton","isLoading","alertTimeout","length","console","error","setActiveButton","clickedButton","forEach","button","classList","remove","add","placeholderText","getAttribute","placeholder","value","dataset","activeButton","trim","style","display","innerHTML","clearTimeout","setTimeout","firstButton","focus","activeButtonPlaceholder","showLoader","loader","hideLoader","checkAddress","isValid","Math","random","log","event","key","preventDefault"],"sourceRoot":""}