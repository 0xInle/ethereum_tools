{"version":3,"file":"main.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;ACNAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,UAAU,GAAGF,QAAQ,CAACG,aAAa,CAAC,YAAY,CAAC;EACvD,MAAMC,WAAW,GAAGJ,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;EAC1D,MAAME,WAAW,GAAGL,QAAQ,CAACG,aAAa,CAAC,gBAAgB,CAAC;EAC5D,MAAMG,OAAO,GAAGN,QAAQ,CAACO,gBAAgB,CAAC,cAAc,CAAC;EACzD,MAAMC,SAAS,GAAGR,QAAQ,CAACG,aAAa,CAAC,mBAAmB,CAAC;EAC7D,MAAMM,YAAY,GAAGT,QAAQ,CAACG,aAAa,CAAC,YAAY,CAAC;EACzD,MAAMO,WAAW,GAAGV,QAAQ,CAACO,gBAAgB,CAAC,oBAAoB,CAAC;;EAEnE;EACAP,QAAQ,CAACO,gBAAgB,CAAC,gBAAgB,CAAC,CAACI,OAAO,CAACC,MAAM,IAAI;IAC5DA,MAAM,CAACX,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACrC,MAAMY,QAAQ,GAAGD,MAAM,CAACT,aAAa,CAAC,kBAAkB,CAAC;MACzD,MAAMW,SAAS,GAAGF,MAAM,CAACT,aAAa,CAAC,aAAa,CAAC;;MAErD;MACAU,QAAQ,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;MAC/BF,SAAS,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;;MAElC;MACAC,UAAU,CAAC,MAAM;QACfJ,QAAQ,CAACE,KAAK,CAACC,OAAO,GAAG,QAAQ;QACjCF,SAAS,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;MAClC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,WAAW,GAAGlB,QAAQ,CAACO,gBAAgB,CAAC,gBAAgB,CAAC;;EAE/D;EACAW,WAAW,CAACP,OAAO,CAACC,MAAM,IAAI;IAC5BA,MAAM,CAACX,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACrC,MAAMkB,YAAY,GAAGP,MAAM,CAACQ,sBAAsB;MAClD,MAAMC,UAAU,GAAGF,YAAY,CAACG,KAAK;MAErC,IAAID,UAAU,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC5BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,UAAU,CAAC,CAACM,IAAI,CAAC,MAAM;UACnDC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QACjD,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;UACdH,OAAO,CAACI,KAAK,CAAC,iCAAiC,EAAED,GAAG,CAAC;QACvD,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAIE,SAAS,GAAG,KAAK;EACrB,IAAIC,YAAY;;EAEhB;EACA,IAAI,CAAChC,UAAU,IAAI,CAACE,WAAW,IAAI,CAACE,OAAO,CAAC6B,MAAM,IAAI,CAAC9B,WAAW,IAAI,CAACG,SAAS,EAAE;IAChFoB,OAAO,CAACI,KAAK,CAAC,sCAAsC,CAAC;IACrD;EACF;;EAEA;EACA,SAASI,WAAWA,CAAA,EAAG;IACrB1B,WAAW,CAACC,OAAO,CAACT,UAAU,IAAI;MAChCA,UAAU,CAACoB,KAAK,GAAG,EAAE;MACrBpB,UAAU,CAACmC,eAAe,CAAC,UAAU,CAAC;IACxC,CAAC,CAAC;EACJ;;EAEA;EACA,SAASC,eAAeA,CAACC,aAAa,EAAE;IACtC;IACAjC,OAAO,CAACK,OAAO,CAACC,MAAM,IAAIA,MAAM,CAAC4B,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC5DF,aAAa,CAACC,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;;IAErC;IACA,MAAMC,eAAe,GAAGJ,aAAa,CAACK,YAAY,CAAC,kBAAkB,CAAC;IACtE1C,UAAU,CAAC2C,WAAW,GAAGF,eAAe;;IAExC;IACAzC,UAAU,CAACoB,KAAK,GAAG,EAAE;IACrBpB,UAAU,CAAC4C,OAAO,CAACC,YAAY,GAAGR,aAAa,CAACK,YAAY,CAAC,kBAAkB,CAAC;;IAEhF;IACAlC,WAAW,CAACC,OAAO,CAACqC,KAAK,IAAIA,KAAK,CAAC1B,KAAK,GAAG,EAAE,CAAC;;IAE9C;IACA,MAAM2B,YAAY,GAAGjD,QAAQ,CAACO,gBAAgB,CAAC,aAAa,CAAC;IAC7D0C,YAAY,CAACtC,OAAO,CAACuC,IAAI,IAAIA,IAAI,CAACC,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC;;IAErD;IACA,IAAIjD,UAAU,CAACoB,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAClCf,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;IACrC;;IAEA;IACArC,WAAW,CAACW,KAAK,CAACC,OAAO,GAAG,OAAO;IACnCZ,WAAW,CAACgD,SAAS,GAAG;AAC5B;AACA,WAAW;;IAEP;IACA,MAAMC,YAAY,GAAGrD,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;IAC3D,IAAIkD,YAAY,EAAE;MAChBA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM;IACrC;;IAEA;IACA,IAAIuB,aAAa,CAACK,YAAY,CAAC,cAAc,CAAC,KAAK,oEAAoE,EAAE;MACvH;MACAK,YAAY,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,IAAI,CAAC,CAAE;MACrCF,YAAY,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,IAAI,CAAC,CAAE;MACrCF,YAAY,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,IAAI,CAAC,CAAE;IACvC,CAAC,MAAM;MACL;MACAF,YAAY,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,UAAU;MACxCF,YAAY,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,aAAa;MAC3CF,YAAY,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,eAAe;IAC/C;EACF;;EAEA;EACAlC,UAAU,CAAC,MAAM;IACf,MAAMqC,WAAW,GAAGhD,OAAO,CAAC,CAAC,CAAC;IAC9B,IAAIgD,WAAW,EAAE;MACfhB,eAAe,CAACgB,WAAW,CAAC;MAC5BA,WAAW,CAACC,KAAK,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAAC,CAAC;;EAEL;EACAjD,OAAO,CAACK,OAAO,CAACC,MAAM,IAAI;IACxBA,MAAM,CAACX,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACrCqC,eAAe,CAAC1B,MAAM,CAAC,CAAC,CAAC;;MAEzB;MACA,MAAMyC,YAAY,GAAGrD,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;MAC3D,IAAIkD,YAAY,EAAE;QAChBA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;MACvC;;MAEA;MACAR,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;;MAEnC;MACAvC,UAAU,CAACoB,KAAK,GAAG,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAlB,WAAW,CAACH,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC1CC,UAAU,CAACoB,KAAK,GAAG,EAAE,CAAC,CAAC;IACvBd,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACrCL,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEf;IACA,MAAMiB,YAAY,GAAGrD,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;IAC3D,IAAIkD,YAAY,EAAE;MAChBA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;IACvC;;IAEA;IACA,MAAMN,WAAW,GAAGV,QAAQ,CAACO,gBAAgB,CAAC,oBAAoB,CAAC;IACnEG,WAAW,CAACC,OAAO,CAACT,UAAU,IAAI;MAChCA,UAAU,CAACsD,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;;IAEF;IACAtD,UAAU,CAACqD,KAAK,CAAC,CAAC;EACpB,CAAC,CAAC;;EAEF;EACAlD,WAAW,CAACJ,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC1C,MAAM8C,YAAY,GAAG/C,QAAQ,CAACG,aAAa,CAAC,qBAAqB,CAAC;IAClE,IAAI4C,YAAY,EAAE;MAChB;MACAvC,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;MACnC,MAAMY,YAAY,GAAGrD,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;MAC3D,IAAIkD,YAAY,EAAE;QAChBA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM;MACrC;;MAEA;MACAd,UAAU,CAACoB,KAAK,GAAGyB,YAAY,CAACH,YAAY,CAAC,cAAc,CAAC;MAC5D1C,UAAU,CAACqD,KAAK,CAAC,CAAC;;MAElB;MACA,IAAIrD,UAAU,CAACoB,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAClCf,SAAS,CAACgC,SAAS,CAACE,GAAG,CAAC,OAAO,CAAC;QAChC,IAAIW,YAAY,EAAE;UAChBA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,OAAO;QACtC;MACF;IACF;EACF,CAAC,CAAC;;EAEF;EACAX,WAAW,CAACJ,gBAAgB,CAAC,SAAS,EAAGwD,KAAK,IAAK;IACjD,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MAAE;MAC3B,MAAMX,YAAY,GAAG/C,QAAQ,CAACG,aAAa,CAAC,qBAAqB,CAAC;MAClE,IAAI4C,YAAY,EAAE;QAChB7C,UAAU,CAACoB,KAAK,GAAGyB,YAAY,CAACH,YAAY,CAAC,cAAc,CAAC;QAC5D1C,UAAU,CAACqD,KAAK,CAAC,CAAC;MACpB;IACF;EACF,CAAC,CAAC;;EAEF;EACArD,UAAU,CAACD,gBAAgB,CAAC,OAAO,EAAE,MAAM;IACzC,MAAM0D,uBAAuB,GAAGzD,UAAU,CAAC4C,OAAO,CAACC,YAAY;IAC/DzC,OAAO,CAACK,OAAO,CAACC,MAAM,IAAI;MACxB,IAAIA,MAAM,CAACgC,YAAY,CAAC,kBAAkB,CAAC,KAAKe,uBAAuB,EAAE;QACvE/C,MAAM,CAAC4B,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MAChC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,SAASkB,UAAUA,CAAA,EAAG;IACpB,MAAMC,MAAM,GAAG;AACnB;AACA,WAAW;IACPzD,WAAW,CAACgD,SAAS,GAAGS,MAAM;IAC9BzD,WAAW,CAACW,KAAK,CAACC,OAAO,GAAG,OAAO;EACrC;;EAEA;EACA,SAAS8C,UAAUA,CAAA,EAAG;IACpB1D,WAAW,CAACW,KAAK,CAACC,OAAO,GAAG,MAAM;EACpC;;EAEA;EACA,SAAS+C,YAAYA,CAAA,EAAG;IACtB,IAAI9B,SAAS,EAAE;IACfA,SAAS,GAAG,IAAI;IAEhB2B,UAAU,CAAC,CAAC;IACZpD,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;IAEnC,MAAMY,YAAY,GAAGrD,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;IAC3D,IAAIkD,YAAY,EAAEA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;;IAEvDC,UAAU,CAAC,MAAM;MACf,MAAM+C,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MACnCJ,UAAU,CAAC,CAAC;MAEZ,IAAIE,OAAO,EAAE;QACXpC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAIwB,YAAY,EAAEA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM;QAErD,MAAMmD,WAAW,GAAG;UAClB,SAAS,EAAE,4CAA4C;UACvD,YAAY,EAAE;YACZ,YAAY,EAAE,oEAAoE;YAClF,cAAc,EAAE;UAClB;QACF,CAAC;QAEDC,2BAA2B,CAACD,WAAW,CAAC;QACxC3D,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;MACrC,CAAC,MAAM;QACLb,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCrB,SAAS,CAACgC,SAAS,CAACE,GAAG,CAAC,OAAO,CAAC;QAEhC,IAAIW,YAAY,EAAE;UAChBA,YAAY,CAACF,WAAW,GAAG,2BAA2B;UACtDE,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,OAAO;QACtC;;QAEA;QACA,MAAMN,WAAW,GAAGV,QAAQ,CAACO,gBAAgB,CAAC,oBAAoB,CAAC;QACnEG,WAAW,CAACC,OAAO,CAACT,UAAU,IAAI;UAChCA,UAAU,CAACsD,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;QAC3C,CAAC,CAAC;MACJ;;MAEA;MACApD,WAAW,CAACW,KAAK,CAACC,OAAO,GAAG,OAAO;MACnCZ,WAAW,CAACgD,SAAS,GAAG;AAC9B;AACA,eAAe;MAETnB,SAAS,GAAG,KAAK;IACnB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,MAAMoC,YAAY,GAAGrE,QAAQ,CAACG,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;;EAE3D;EACAkE,YAAY,CAACpE,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC3C;IACA,IAAIoE,YAAY,CAAC/C,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpCf,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;MACrC,MAAMY,YAAY,GAAGrD,QAAQ,CAACG,aAAa,CAAC,cAAc,CAAC;MAC3D,IAAIkD,YAAY,EAAE;QAChBA,YAAY,CAACtC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;MACvC;IACF;EACF,CAAC,CAAC;;EAEF;EACAP,YAAY,CAACR,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC3C,MAAMqE,YAAY,GAAGpE,UAAU,CAACoB,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;;IAEnD;IACA,IAAI+C,YAAY,IAAI,CAAC9D,SAAS,CAACgC,SAAS,CAAC+B,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC1D/D,SAAS,CAACgC,SAAS,CAACE,GAAG,CAAC,OAAO,CAAC;IAClC,CAAC,MAAM,IAAI,CAAC4B,YAAY,EAAE;MACxB;MACA9D,SAAS,CAACgC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;MACnCL,WAAW,CAAC,CAAC;MACb2B,YAAY,CAAC,CAAC;IAChB;;IAEA;IACA7D,UAAU,CAACqD,KAAK,CAAC,CAAC;EACpB,CAAC,CAAC;;EAEF;EACArD,UAAU,CAACD,gBAAgB,CAAC,SAAS,EAAGwD,KAAK,IAAK;IAChD,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzBD,KAAK,CAACe,cAAc,CAAC,CAAC;MACtB,IAAItE,UAAU,CAACoB,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAClCf,SAAS,CAACgC,SAAS,CAACE,GAAG,CAAC,OAAO,CAAC;MAClC,CAAC,MAAM;QACLN,WAAW,CAAC,CAAC;QACb2B,YAAY,CAAC,CAAC;MAChB;IACF;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,SAASK,2BAA2BA,CAACK,QAAQ,EAAE;EAC7C,MAAM/D,WAAW,GAAGV,QAAQ,CAACO,gBAAgB,CAAC,oBAAoB,CAAC;;EAEnE;EACAG,WAAW,CAAC,CAAC,CAAC,CAACY,KAAK,GAAGmD,QAAQ,CAACC,OAAO;EACvChE,WAAW,CAAC,CAAC,CAAC,CAACY,KAAK,GAAGmD,QAAQ,CAACE,UAAU,CAACC,UAAU;EACrDlE,WAAW,CAAC,CAAC,CAAC,CAACY,KAAK,GAAGmD,QAAQ,CAACE,UAAU,CAACE,YAAY;;EAEvD;EACAnE,WAAW,CAACC,OAAO,CAACT,UAAU,IAAI;IAChCA,UAAU,CAACsD,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;EAC3C,CAAC,CAAC;AACJ;;AAEA;AACA,MAAM/C,YAAY,GAAGT,QAAQ,CAACG,aAAa,CAAC,YAAY,CAAC;AACzD,MAAMD,UAAU,GAAGF,QAAQ,CAACG,aAAa,CAAC,YAAY,CAAC;AAEvDM,YAAY,CAACR,gBAAgB,CAAC,OAAO,EAAE,MAAM;EAC3CC,UAAU,CAAC4E,IAAI,CAAC,CAAC;AACnB,CAAC,CAAC;;AAEF;AACA5E,UAAU,CAACD,gBAAgB,CAAC,SAAS,EAAGwD,KAAK,IAAK;EAChD,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;IACzBD,KAAK,CAACe,cAAc,CAAC,CAAC;IACtBtE,UAAU,CAAC4E,IAAI,CAAC,CAAC;EACnB;AACF,CAAC,CAAC,C","sources":["webpack://gulp-builder/webpack/bootstrap","webpack://gulp-builder/webpack/runtime/make namespace object","webpack://gulp-builder/./src/js/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","document.addEventListener('DOMContentLoaded', () => {\n  const inputField = document.querySelector('.main__inp');\n  const clearButton = document.querySelector('.main__btn-x');\n  const exampleText = document.querySelector('.main__example');\n  const buttons = document.querySelectorAll('.header__btn');\n  const searchBox = document.querySelector('.main__search-box');\n  const submitButton = document.querySelector('.main__btn');\n  const inputFields = document.querySelectorAll('.main__inp-content');\n\n  // // Функция смены иконок\n  document.querySelectorAll('.main__inp-btn').forEach(button => {\n    button.addEventListener('click', () => {\n      const copyIcon = button.querySelector('.main__icon-copy');\n      const checkIcon = button.querySelector('.copy-check');\n\n      // Показываем иконку галочки, скрываем иконку копии\n      copyIcon.style.display = 'none';\n      checkIcon.style.display = 'inline';\n\n      // Через 3 секунды возвращаем всё обратно\n      setTimeout(() => {\n        copyIcon.style.display = 'inline';\n        checkIcon.style.display = 'none';\n      }, 1000);\n    });\n  });\n\n  // Кнопки копирования\n  const copyButtons = document.querySelectorAll('.main__inp-btn');\n\n  // Добавляем обработчик для кнопок копирования\n  copyButtons.forEach(button => {\n    button.addEventListener('click', () => {\n      const inputElement = button.previousElementSibling;\n      const textToCopy = inputElement.value;\n\n      if (textToCopy.trim() !== '') {\n        navigator.clipboard.writeText(textToCopy).then(() => {\n          console.log(\"Текст скопирован в буфер обмена!\");\n        }).catch(err => {\n          console.error('Ошибка при копировании текста: ', err);\n        });\n      }\n    });\n  });\n\n  let isLoading = false;\n  let alertTimeout;\n\n  // Проверка на наличие всех необходимых элементов\n  if (!inputField || !clearButton || !buttons.length || !exampleText || !searchBox) {\n    console.error('Ошибка: Один из элементов не найден.');\n    return;\n  }\n\n  // Функция для очистки всех полей ввода\n  function clearFields() {\n    inputFields.forEach(inputField => {\n      inputField.value = '';\n      inputField.removeAttribute('readonly');\n    });\n  }\n\n  // Функция для установки активной кнопки и обновления плейсхолдера\n  function setActiveButton(clickedButton) {\n    // Снимаем активность с всех кнопок\n    buttons.forEach(button => button.classList.remove('active'));\n    clickedButton.classList.add('active');\n\n    // Обновляем плейсхолдер\n    const placeholderText = clickedButton.getAttribute('data-placeholder');\n    inputField.placeholder = placeholderText;\n\n    // Очищаем активное поле ввода и сбрасываем активную кнопку\n    inputField.value = '';\n    inputField.dataset.activeButton = clickedButton.getAttribute('data-placeholder');\n\n    // Очищаем все другие инпуты, которые могут быть заполнены\n    inputFields.forEach(input => input.value = '');\n\n    // Очищаем все тексты в блоках (если они есть)\n    const spanElements = document.querySelectorAll('.main__span');\n    spanElements.forEach(span => span.textContent = ''); // Очистка названий полей\n\n    // Убираем ошибку, если поле пустое\n    if (inputField.value.trim() === '') {\n      searchBox.classList.remove('error');\n    }\n\n    // Показать крестик после очищения\n    clearButton.style.display = 'block';\n    clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>`;\n\n    // Очищаем сообщение об ошибке, если оно было\n    const errorMessage = document.querySelector('.main__error');\n    if (errorMessage) {\n      errorMessage.style.display = 'none';\n    }\n\n    // Изменение названий полей в зависимости от активной кнопки\n    if (clickedButton.getAttribute('data-example') === \"0xf0b1a4a35f7640d3cebd29b2813b3dff5b686e498d7060846ad4564dae6cd675\") {\n      // Кнопка Tx Hash → RSZ\n      spanElements[0].textContent = 'R:';  // Address -> R\n      spanElements[1].textContent = 'S:';  // Compressed -> S\n      spanElements[2].textContent = 'Z:';  // Uncompressed -> Z\n    } else {\n      // Восстанавливаем первоначальные названия\n      spanElements[0].textContent = 'Address:';\n      spanElements[1].textContent = 'Compressed:';\n      spanElements[2].textContent = 'Uncompressed:';\n    }\n  }\n\n  // Устанавливаем фокус на первую кнопку\n  setTimeout(() => {\n    const firstButton = buttons[0];\n    if (firstButton) {\n      setActiveButton(firstButton);\n      firstButton.focus();\n    }\n  }, 0);\n\n  // Обработчик для кнопок переключения\n  buttons.forEach(button => {\n    button.addEventListener('click', () => {\n      setActiveButton(button); // Вызов функции для изменения состояния кнопки и текста полей\n\n      // Скрываем блок ошибки при переключении кнопок\n      const errorMessage = document.querySelector('.main__error');\n      if (errorMessage) {\n        errorMessage.style.display = 'none'; // Скрыть ошибку при переключении\n      }\n\n      // Также очищаем ошибки на поле и на кнопке\n      searchBox.classList.remove('error');\n\n      // Если нужно, можно сбросить состояние, например, сбросить введенное значение в поле\n      inputField.value = ''; // Очищаем значение input (если необходимо)\n    });\n  });\n\n  // Очищение инпута и скрытие блока с ошибкой при нажатии на крестик\n  clearButton.addEventListener('click', () => {\n    inputField.value = ''; // Очищаем input\n    searchBox.classList.remove('error'); // Сбрасываем красный бордер\n    clearFields(); // Очищаем все другие поля ввода\n\n    // Скрываем блок ошибки при нажатии на крестик\n    const errorMessage = document.querySelector('.main__error');\n    if (errorMessage) {\n      errorMessage.style.display = 'none'; // Скрыть ошибку при клике на крестик\n    }\n\n    // Устанавливаем поля только для чтения снова после очистки\n    const inputFields = document.querySelectorAll('.main__inp-content');\n    inputFields.forEach(inputField => {\n      inputField.setAttribute('readonly', true); // Устанавливаем поля в состояние только для чтения\n    });\n\n    // Устанавливаем фокус обратно на инпут\n    inputField.focus();\n  });\n\n  // Клик по example вставляет примерный адрес в input и переносит фокус на input\n  exampleText.addEventListener('click', () => {\n    const activeButton = document.querySelector('.header__btn.active');\n    if (activeButton) {\n      // Убираем ошибку перед вставкой текста\n      searchBox.classList.remove('error');\n      const errorMessage = document.querySelector('.main__error');\n      if (errorMessage) {\n        errorMessage.style.display = 'none';\n      }\n\n      // Вставляем новый адрес\n      inputField.value = activeButton.getAttribute('data-example');\n      inputField.focus();\n\n      // Теперь проверим, если поле пустое, то снова добавим ошибку\n      if (inputField.value.trim() === '') {\n        searchBox.classList.add('error');\n        if (errorMessage) {\n          errorMessage.style.display = 'block';\n        }\n      }\n    }\n  });\n\n  // Добавляем обработчик для клавиши Enter\n  exampleText.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') { // Проверяем, была ли нажата клавиша Enter\n      const activeButton = document.querySelector('.header__btn.active');\n      if (activeButton) {\n        inputField.value = activeButton.getAttribute('data-example');\n        inputField.focus();\n      }\n    }\n  });\n\n  // Сохраняем выделение кнопки при взаимодействии с инпутом\n  inputField.addEventListener('focus', () => {\n    const activeButtonPlaceholder = inputField.dataset.activeButton;\n    buttons.forEach(button => {\n      if (button.getAttribute('data-placeholder') === activeButtonPlaceholder) {\n        button.classList.add('active');\n      }\n    });\n  });\n\n  // Функция для отображения лоадера\n  function showLoader() {\n    const loader = `<svg class=\"loader\" viewBox=\"0 0 50 50\">\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"4\" stroke-dasharray=\"90, 150\" stroke-linecap=\"round\"></circle>\n    </svg>`;\n    clearButton.innerHTML = loader;\n    clearButton.style.display = 'block';\n  }\n\n  // Функция для скрытия лоадера\n  function hideLoader() {\n    clearButton.style.display = 'none';\n  }\n\n  // Валидация адреса и лоадер\n  function checkAddress() {\n    if (isLoading) return;\n    isLoading = true;\n\n    showLoader();\n    searchBox.classList.remove('error');\n\n    const errorMessage = document.querySelector('.main__error');\n    if (errorMessage) errorMessage.style.display = 'none'; // Скрываем ошибку перед проверкой\n\n    setTimeout(() => {\n      const isValid = Math.random() > 0.5;\n      hideLoader();\n\n      if (isValid) {\n        console.log(\"Адрес валиден\");\n        if (errorMessage) errorMessage.style.display = 'none';\n\n        const apiResponse = {\n          \"address\": \"0x1406854d149e081ac09cb4ca560da463f3123059\",\n          \"public_key\": {\n            \"compressed\": \"03a34f5673c9e98d2f8b5a4c7b6c8d9e0f1a2b3c4d5e6f70819283746556473829\",\n            \"uncompressed\": \"04a34f5673c9e98d2f8b5a4c7b6c8d9e0f1a2b3c4d5e6f70819283746556473829b8f7e6d5c4b3a2f1e0d9c8b7a6b5a4f3e2d1c0b9a8b7c6d5e4f3g2h1\"\n          }\n        };\n\n        fillFieldsWithValidResponse(apiResponse);\n        searchBox.classList.remove('error');\n      } else {\n        console.log(\"Ошибка: адрес не валиден\");\n        searchBox.classList.add('error');\n\n        if (errorMessage) {\n          errorMessage.textContent = \"Failed to process request\";\n          errorMessage.style.display = 'block';\n        }\n\n        // В случае ошибки делаем поля только для чтения\n        const inputFields = document.querySelectorAll('.main__inp-content');\n        inputFields.forEach(inputField => {\n          inputField.setAttribute('readonly', true);\n        });\n      }\n\n      // Всегда показываем крестик после завершения лоадера\n      clearButton.style.display = 'block';\n      clearButton.innerHTML = `<svg class=\"main__svg-x\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>`;\n\n      isLoading = false;\n    }, 1000);\n  }\n\n  const addressInput = document.querySelector('.main__inp'); // Поле ввода адреса (для его отслеживания)\n\n  // Обработчик для поля ввода адреса\n  addressInput.addEventListener('input', () => {\n    // Если пользователь начал вводить, сбрасываем ошибку\n    if (addressInput.value.trim() !== '') {\n      searchBox.classList.remove('error'); // Убираем ошибку, если есть\n      const errorMessage = document.querySelector('.main__error');\n      if (errorMessage) {\n        errorMessage.style.display = 'none'; // Скрываем сообщение об ошибке\n      }\n    }\n  });\n\n  // Обработчик на кнопку отправки\n  submitButton.addEventListener('click', () => {\n    const isFieldEmpty = inputField.value.trim() === '';\n\n    // Если поле пустое и ошибка ещё не добавлена\n    if (isFieldEmpty && !searchBox.classList.contains('error')) {\n      searchBox.classList.add('error');\n    } else if (!isFieldEmpty) {\n      // Если поле не пустое, удаляем ошибку\n      searchBox.classList.remove('error');\n      clearFields();\n      checkAddress();\n    }\n\n    // Переносим фокус на поле ввода\n    inputField.focus();\n  });\n\n  // Обработчик для нажатия Enter\n  inputField.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (inputField.value.trim() === '') {\n        searchBox.classList.add('error');\n      } else {\n        clearFields();\n        checkAddress();\n      }\n    }\n  });\n});\n\n// Функция для заполнения полей при ответе\nfunction fillFieldsWithValidResponse(response) {\n  const inputFields = document.querySelectorAll('.main__inp-content');\n\n  // Заполнение значений в поля\n  inputFields[0].value = response.address;\n  inputFields[1].value = response.public_key.compressed;\n  inputFields[2].value = response.public_key.uncompressed;\n\n  // После успешного ответа делаем поля только для чтения\n  inputFields.forEach(inputField => {\n    inputField.setAttribute('readonly', true);\n  });\n}\n\n// Закрытие клавиатуры при нажатии на кнопку\nconst submitButton = document.querySelector('.main__btn');\nconst inputField = document.querySelector('.main__inp');\n\nsubmitButton.addEventListener('click', () => {\n  inputField.blur();\n});\n\n// Закрытие клавиатуры при нажатии Enter\ninputField.addEventListener('keydown', (event) => {\n  if (event.key === 'Enter') {\n    event.preventDefault();\n    inputField.blur();\n  }\n});\n"],"names":["document","addEventListener","inputField","querySelector","clearButton","exampleText","buttons","querySelectorAll","searchBox","submitButton","inputFields","forEach","button","copyIcon","checkIcon","style","display","setTimeout","copyButtons","inputElement","previousElementSibling","textToCopy","value","trim","navigator","clipboard","writeText","then","console","log","catch","err","error","isLoading","alertTimeout","length","clearFields","removeAttribute","setActiveButton","clickedButton","classList","remove","add","placeholderText","getAttribute","placeholder","dataset","activeButton","input","spanElements","span","textContent","innerHTML","errorMessage","firstButton","focus","setAttribute","event","key","activeButtonPlaceholder","showLoader","loader","hideLoader","checkAddress","isValid","Math","random","apiResponse","fillFieldsWithValidResponse","addressInput","isFieldEmpty","contains","preventDefault","response","address","public_key","compressed","uncompressed","blur"],"sourceRoot":""}